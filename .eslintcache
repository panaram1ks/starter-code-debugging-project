[{"/Users/youraall/Desktop/debugging-project /starter-code-debugging-project /src/index.js":"1","/Users/youraall/Desktop/debugging-project /starter-code-debugging-project /src/App.js":"2","/Users/youraall/Desktop/debugging-project /starter-code-debugging-project /src/components/Tasks/TaskInput/TaskInput.js":"3","/Users/youraall/Desktop/debugging-project /starter-code-debugging-project /src/components/Tasks/TaskList/TaskList.js":"4","/Users/youraall/Desktop/debugging-project /starter-code-debugging-project /src/components/Tasks/Task/Task.js":"5","/Users/youraall/Desktop/debugging-project /starter-code-debugging-project /src/components/UI/Button/Button.js":"6"},{"size":142,"mtime":1642926576078,"results":"7","hashOfConfig":"8"},{"size":1260,"mtime":1643395233344,"results":"9","hashOfConfig":"8"},{"size":1979,"mtime":1643281342935,"results":"10","hashOfConfig":"8"},{"size":358,"mtime":1642934809849,"results":"11","hashOfConfig":"8"},{"size":365,"mtime":1642934838021,"results":"12","hashOfConfig":"8"},{"size":750,"mtime":1643280222715,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1bu0toz",{"filePath":"16","messages":"17","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/youraall/Desktop/debugging-project /starter-code-debugging-project /src/index.js",[],"/Users/youraall/Desktop/debugging-project /starter-code-debugging-project /src/App.js",["28"],"import React, { useState } from \"react\";\n\nimport TaskList from \"./components/Tasks/TaskList/TaskList\";\nimport TaskInput from \"./components/Tasks/TaskInput/TaskInput\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [tasks, setTasks] = useState([\n    { text: \"Создание курса - 1 час\", id: \"t1\" },\n    { text: \"Разминка 15 мин\", id: \"t2\" },\n    { text: \"Создание курса - 1 час\", id: \"t3\" },\n  ]);\n\n  const addTaskHandler = (inputText) => {\n    setTasks((prevTasks) => {\n      const updatedTasks = [...prevTasks];\n      updatedTasks.unshift({ text: inputText, id: 'task1' });\n      return updatedTasks;\n    });\n  };\n\n  const deleteTaskHandler = (taskId) => {\n    setTasks((prevTasks) => {\n      const updatedTasks = prevTasks.filter((task) => task.id !== taskId);\n      return updatedTasks;\n    });\n  };\n\n  let content = (\n    <p style={{ textAlign: \"center\" }}>Задач не найдено! Добавить?</p>\n  );\n\n  if (tasks.length > 0) {\n    content = <TaskList items={tasks} onDeleteTask={deleteTaskHandler} />;\n  }\n\n  return (\n   \n      <section id=\"task-form\">\n        <TaskInput onAddTask={addTaskHandler} />\n      </section>\n      <section id=\"tasks\">{content}</section>\n   \n  );\n};\n\nexport default App;\n",["29","30"],"/Users/youraall/Desktop/debugging-project /starter-code-debugging-project /src/components/Tasks/TaskInput/TaskInput.js",[],"/Users/youraall/Desktop/debugging-project /starter-code-debugging-project /src/components/Tasks/TaskList/TaskList.js",[],"/Users/youraall/Desktop/debugging-project /starter-code-debugging-project /src/components/Tasks/Task/Task.js",[],"/Users/youraall/Desktop/debugging-project /starter-code-debugging-project /src/components/UI/Button/Button.js",[],{"ruleId":null,"fatal":true,"severity":2,"message":"31","line":42,"column":7},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},"Parsing error: Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\n\n\u001b[0m \u001b[90m 40 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33mTaskInput\u001b[39m onAddTask\u001b[33m=\u001b[39m{addTaskHandler} \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 41 |\u001b[39m       \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33msection\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 42 |\u001b[39m       \u001b[33m<\u001b[39m\u001b[33msection\u001b[39m id\u001b[33m=\u001b[39m\u001b[32m\"tasks\"\u001b[39m\u001b[33m>\u001b[39m{content}\u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33msection\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 43 |\u001b[39m    \u001b[0m\n\u001b[0m \u001b[90m 44 |\u001b[39m   )\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 45 |\u001b[39m }\u001b[33m;\u001b[39m\u001b[0m","no-native-reassign",["36"],"no-negated-in-lhs",["37"],"no-global-assign","no-unsafe-negation"]